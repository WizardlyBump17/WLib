plugins {
    id("com.gradleup.shadow") version "8.3.2"
    id 'maven-publish'
}

subprojects {
    apply plugin: "com.gradleup.shadow"
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.wizardlybump17.wlib'
    version = '1.6.7+1.20.6'

    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url("https://repo.papermc.io/repository/maven-public/")
        }
    }

    sourceCompatibility = '21'
    targetCompatibility = '21'

    tasks {
        compileJava {
            options.encoding = 'UTF-8'
        }

        assemble {
            dependsOn(shadowJar)

            for (def reobfJar in getTasksByName("reobfJar", false))
                dependsOn(reobfJar)
        }
    }

    java {
        withSourcesJar()
    }
}

subprojects {
    dependencies {
        testImplementation(platform("org.junit:junit-bom:5.10.3"))
        testImplementation("org.junit.jupiter:junit-jupiter:5.10.3")
    }

    test {
        useJUnitPlatform()
    }

    if (project.name == 'versions' || project.name.matches('v\\d_\\d+_R\\d+')) {
        tasks.withType(PublishToMavenRepository).configureEach {
            it.enabled = false
        }
        return
    }

    publishing {
        repositories {
            maven {
                url = uri('https://maven.pkg.github.com/WizardlyBump17/WLib')
                credentials {
                    username = project.findProperty('gpr.user') ?: System.getenv('USERNAME')
                    password = project.findProperty('gpr.key') ?: System.getenv('TOKEN')
                }
            }
        }

        publications {
            gpr(MavenPublication) {
                from(components.java)
                pom.withXml {
                    asNode().dependencies.dependency.each { dep ->
                        if (dep.artifactId.last().value().last().matches('v\\d_\\d+_R\\d+'))
                            dep.parent().remove(dep)
                    }
                }
            }
        }
    }
}